#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.250
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace scratch
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="incyte")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBusiness(Business instance);
    partial void UpdateBusiness(Business instance);
    partial void DeleteBusiness(Business instance);
    partial void InsertUserLogin(UserLogin instance);
    partial void UpdateUserLogin(UserLogin instance);
    partial void DeleteUserLogin(UserLogin instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertOnlineStatus(OnlineStatus instance);
    partial void UpdateOnlineStatus(OnlineStatus instance);
    partial void DeleteOnlineStatus(OnlineStatus instance);
    partial void InsertResponseType(ResponseType instance);
    partial void UpdateResponseType(ResponseType instance);
    partial void DeleteResponseType(ResponseType instance);
    partial void InsertSource(Source instance);
    partial void UpdateSource(Source instance);
    partial void DeleteSource(Source instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertUserEngaged(UserEngaged instance);
    partial void UpdateUserEngaged(UserEngaged instance);
    partial void DeleteUserEngaged(UserEngaged instance);
    partial void InsertUserInfo(UserInfo instance);
    partial void UpdateUserInfo(UserInfo instance);
    partial void DeleteUserInfo(UserInfo instance);
    partial void InsertUserLink(UserLink instance);
    partial void UpdateUserLink(UserLink instance);
    partial void DeleteUserLink(UserLink instance);
    partial void InsertUserCheckIn(UserCheckIn instance);
    partial void UpdateUserCheckIn(UserCheckIn instance);
    partial void DeleteUserCheckIn(UserCheckIn instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::scratch.Properties.Settings.Default.incyteConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Business> Businesses
		{
			get
			{
				return this.GetTable<Business>();
			}
		}
		
		public System.Data.Linq.Table<UserLogin> UserLogins
		{
			get
			{
				return this.GetTable<UserLogin>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<OnlineStatus> OnlineStatus
		{
			get
			{
				return this.GetTable<OnlineStatus>();
			}
		}
		
		public System.Data.Linq.Table<ResponseType> ResponseTypes
		{
			get
			{
				return this.GetTable<ResponseType>();
			}
		}
		
		public System.Data.Linq.Table<Source> Sources
		{
			get
			{
				return this.GetTable<Source>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<UserEngaged> UserEngageds
		{
			get
			{
				return this.GetTable<UserEngaged>();
			}
		}
		
		public System.Data.Linq.Table<UserEngagedHistory> UserEngagedHistories
		{
			get
			{
				return this.GetTable<UserEngagedHistory>();
			}
		}
		
		public System.Data.Linq.Table<UserInfo> UserInfos
		{
			get
			{
				return this.GetTable<UserInfo>();
			}
		}
		
		public System.Data.Linq.Table<UserInfoHistory> UserInfoHistories
		{
			get
			{
				return this.GetTable<UserInfoHistory>();
			}
		}
		
		public System.Data.Linq.Table<UserLink> UserLinks
		{
			get
			{
				return this.GetTable<UserLink>();
			}
		}
		
		public System.Data.Linq.Table<UserCheckInHistory> UserCheckInHistories
		{
			get
			{
				return this.GetTable<UserCheckInHistory>();
			}
		}
		
		public System.Data.Linq.Table<UserCheckIn> UserCheckIns
		{
			get
			{
				return this.GetTable<UserCheckIn>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Business")]
	public partial class Business : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessId;
		
		private string _BusinessShortName;
		
		private string _BusinessLongName;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _CityName;
		
		private int _CityID;
		
		private string _StateName;
		
		private int _StateID;
		
		private string _ZipCode;
		
		private System.DateTime _UpdatedDtTm;
		
		private string _UpdatedBy;
		
		private int _CountryId;
		
		private bool _Disabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessIdChanging(int value);
    partial void OnBusinessIdChanged();
    partial void OnBusinessShortNameChanging(string value);
    partial void OnBusinessShortNameChanged();
    partial void OnBusinessLongNameChanging(string value);
    partial void OnBusinessLongNameChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnUpdatedDtTmChanging(System.DateTime value);
    partial void OnUpdatedDtTmChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnDisabledChanging(bool value);
    partial void OnDisabledChanged();
    #endregion
		
		public Business()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessId
		{
			get
			{
				return this._BusinessId;
			}
			set
			{
				if ((this._BusinessId != value))
				{
					this.OnBusinessIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessId = value;
					this.SendPropertyChanged("BusinessId");
					this.OnBusinessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessShortName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string BusinessShortName
		{
			get
			{
				return this._BusinessShortName;
			}
			set
			{
				if ((this._BusinessShortName != value))
				{
					this.OnBusinessShortNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessShortName = value;
					this.SendPropertyChanged("BusinessShortName");
					this.OnBusinessShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLongName", DbType="VarChar(255)")]
		public string BusinessLongName
		{
			get
			{
				return this._BusinessLongName;
			}
			set
			{
				if ((this._BusinessLongName != value))
				{
					this.OnBusinessLongNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessLongName = value;
					this.SendPropertyChanged("BusinessLongName");
					this.OnBusinessLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="VarChar(80)")]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="VarChar(80)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(80)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(80)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(15)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this.OnUpdatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDtTm = value;
					this.SendPropertyChanged("UpdatedDtTm");
					this.OnUpdatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL")]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit NOT NULL")]
		public bool Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	public partial class UserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserName;
		
		private string _Password;
		
		private System.DateTime _CreatedDtTm;
		
		private string _CreatedBy;
		
		private bool _Disabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreatedDtTmChanging(System.DateTime value);
    partial void OnCreatedDtTmChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDisabledChanging(bool value);
    partial void OnDisabledChanged();
    #endregion
		
		public UserLogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDtTm
		{
			get
			{
				return this._CreatedDtTm;
			}
			set
			{
				if ((this._CreatedDtTm != value))
				{
					this.OnCreatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._CreatedDtTm = value;
					this.SendPropertyChanged("CreatedDtTm");
					this.OnCreatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit NOT NULL")]
		public bool Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private int _StateID;
		
		private string _CityShortName;
		
		private string _CityLongName;
		
		private System.Nullable<System.DateTime> _UpdatedDtTm;
		
		private string _UpdatedBy;
		
		private int _CountryId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnCityShortNameChanging(string value);
    partial void OnCityShortNameChanged();
    partial void OnCityLongNameChanging(string value);
    partial void OnCityLongNameChanged();
    partial void OnUpdatedDtTmChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDtTmChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    #endregion
		
		public City()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityShortName", DbType="VarChar(20)")]
		public string CityShortName
		{
			get
			{
				return this._CityShortName;
			}
			set
			{
				if ((this._CityShortName != value))
				{
					this.OnCityShortNameChanging(value);
					this.SendPropertyChanging();
					this._CityShortName = value;
					this.SendPropertyChanged("CityShortName");
					this.OnCityShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityLongName", DbType="VarChar(80)")]
		public string CityLongName
		{
			get
			{
				return this._CityLongName;
			}
			set
			{
				if ((this._CityLongName != value))
				{
					this.OnCityLongNameChanging(value);
					this.SendPropertyChanging();
					this._CityLongName = value;
					this.SendPropertyChanged("CityLongName");
					this.OnCityLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this.OnUpdatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDtTm = value;
					this.SendPropertyChanged("UpdatedDtTm");
					this.OnUpdatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(20)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL")]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryId;
		
		private string _ShortName;
		
		private string _LongName;
		
		private string _ISO3CountryCode;
		
		private string _ISO2CountryCode;
		
		private System.Nullable<System.DateTime> _UpdatedDtTm;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    partial void OnISO3CountryCodeChanging(string value);
    partial void OnISO3CountryCodeChanged();
    partial void OnISO2CountryCodeChanging(string value);
    partial void OnISO2CountryCodeChanged();
    partial void OnUpdatedDtTmChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDtTmChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this.OnLongNameChanging(value);
					this.SendPropertyChanging();
					this._LongName = value;
					this.SendPropertyChanged("LongName");
					this.OnLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO3CountryCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string ISO3CountryCode
		{
			get
			{
				return this._ISO3CountryCode;
			}
			set
			{
				if ((this._ISO3CountryCode != value))
				{
					this.OnISO3CountryCodeChanging(value);
					this.SendPropertyChanging();
					this._ISO3CountryCode = value;
					this.SendPropertyChanged("ISO3CountryCode");
					this.OnISO3CountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO2CountryCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string ISO2CountryCode
		{
			get
			{
				return this._ISO2CountryCode;
			}
			set
			{
				if ((this._ISO2CountryCode != value))
				{
					this.OnISO2CountryCodeChanging(value);
					this.SendPropertyChanging();
					this._ISO2CountryCode = value;
					this.SendPropertyChanged("ISO2CountryCode");
					this.OnISO2CountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this.OnUpdatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDtTm = value;
					this.SendPropertyChanged("UpdatedDtTm");
					this.OnUpdatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(80)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnlineStatus")]
	public partial class OnlineStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _OnlineStatusID;
		
		private string _OnlineStatusName;
		
		private string _OnlineStatusDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOnlineStatusIDChanging(short value);
    partial void OnOnlineStatusIDChanged();
    partial void OnOnlineStatusNameChanging(string value);
    partial void OnOnlineStatusNameChanged();
    partial void OnOnlineStatusDescriptionChanging(string value);
    partial void OnOnlineStatusDescriptionChanged();
    #endregion
		
		public OnlineStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineStatusID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short OnlineStatusID
		{
			get
			{
				return this._OnlineStatusID;
			}
			set
			{
				if ((this._OnlineStatusID != value))
				{
					this.OnOnlineStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OnlineStatusID = value;
					this.SendPropertyChanged("OnlineStatusID");
					this.OnOnlineStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineStatusName", DbType="VarChar(10)")]
		public string OnlineStatusName
		{
			get
			{
				return this._OnlineStatusName;
			}
			set
			{
				if ((this._OnlineStatusName != value))
				{
					this.OnOnlineStatusNameChanging(value);
					this.SendPropertyChanging();
					this._OnlineStatusName = value;
					this.SendPropertyChanged("OnlineStatusName");
					this.OnOnlineStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineStatusDescription", DbType="VarChar(80)")]
		public string OnlineStatusDescription
		{
			get
			{
				return this._OnlineStatusDescription;
			}
			set
			{
				if ((this._OnlineStatusDescription != value))
				{
					this.OnOnlineStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OnlineStatusDescription = value;
					this.SendPropertyChanged("OnlineStatusDescription");
					this.OnOnlineStatusDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResponseType")]
	public partial class ResponseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ResponseTypeID;
		
		private string _ResponseName;
		
		private System.DateTime _UpdatedDtTm;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResponseTypeIDChanging(short value);
    partial void OnResponseTypeIDChanged();
    partial void OnResponseNameChanging(string value);
    partial void OnResponseNameChanged();
    partial void OnUpdatedDtTmChanging(System.DateTime value);
    partial void OnUpdatedDtTmChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public ResponseType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseTypeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ResponseTypeID
		{
			get
			{
				return this._ResponseTypeID;
			}
			set
			{
				if ((this._ResponseTypeID != value))
				{
					this.OnResponseTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ResponseTypeID = value;
					this.SendPropertyChanged("ResponseTypeID");
					this.OnResponseTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ResponseName
		{
			get
			{
				return this._ResponseName;
			}
			set
			{
				if ((this._ResponseName != value))
				{
					this.OnResponseNameChanging(value);
					this.SendPropertyChanging();
					this._ResponseName = value;
					this.SendPropertyChanged("ResponseName");
					this.OnResponseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this.OnUpdatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDtTm = value;
					this.SendPropertyChanged("UpdatedDtTm");
					this.OnUpdatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Source")]
	public partial class Source : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _SourceID;
		
		private string _SourceName;
		
		private string _SourceDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSourceIDChanging(short value);
    partial void OnSourceIDChanged();
    partial void OnSourceNameChanging(string value);
    partial void OnSourceNameChanged();
    partial void OnSourceDescriptionChanging(string value);
    partial void OnSourceDescriptionChanged();
    #endregion
		
		public Source()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this.OnSourceNameChanging(value);
					this.SendPropertyChanging();
					this._SourceName = value;
					this.SendPropertyChanged("SourceName");
					this.OnSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDescription", DbType="VarChar(80)")]
		public string SourceDescription
		{
			get
			{
				return this._SourceDescription;
			}
			set
			{
				if ((this._SourceDescription != value))
				{
					this.OnSourceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SourceDescription = value;
					this.SendPropertyChanged("SourceDescription");
					this.OnSourceDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private string _StateShortName;
		
		private string _StateLongName;
		
		private System.DateTime _UpdatedDtTm;
		
		private string _UpdatedBy;
		
		private int _CountryId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnStateShortNameChanging(string value);
    partial void OnStateShortNameChanged();
    partial void OnStateLongNameChanging(string value);
    partial void OnStateLongNameChanged();
    partial void OnUpdatedDtTmChanging(System.DateTime value);
    partial void OnUpdatedDtTmChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateShortName", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string StateShortName
		{
			get
			{
				return this._StateShortName;
			}
			set
			{
				if ((this._StateShortName != value))
				{
					this.OnStateShortNameChanging(value);
					this.SendPropertyChanging();
					this._StateShortName = value;
					this.SendPropertyChanged("StateShortName");
					this.OnStateShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateLongName", DbType="VarChar(80)")]
		public string StateLongName
		{
			get
			{
				return this._StateLongName;
			}
			set
			{
				if ((this._StateLongName != value))
				{
					this.OnStateLongNameChanging(value);
					this.SendPropertyChanging();
					this._StateLongName = value;
					this.SendPropertyChanged("StateLongName");
					this.OnStateLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this.OnUpdatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDtTm = value;
					this.SendPropertyChanged("UpdatedDtTm");
					this.OnUpdatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL")]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserEngaged")]
	public partial class UserEngaged : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserLinkID;
		
		private System.DateTime _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.DateTime _UpdatedDtTm;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserLinkIDChanging(int value);
    partial void OnUserLinkIDChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnUpdatedDtTmChanging(System.DateTime value);
    partial void OnUpdatedDtTmChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public UserEngaged()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLinkID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserLinkID
		{
			get
			{
				return this._UserLinkID;
			}
			set
			{
				if ((this._UserLinkID != value))
				{
					this.OnUserLinkIDChanging(value);
					this.SendPropertyChanging();
					this._UserLinkID = value;
					this.SendPropertyChanged("UserLinkID");
					this.OnUserLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this.OnUpdatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDtTm = value;
					this.SendPropertyChanged("UpdatedDtTm");
					this.OnUpdatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserEngagedHistory")]
	public partial class UserEngagedHistory
	{
		
		private int _UserLinkID;
		
		private System.DateTime _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.DateTime _UpdatedDtTm;
		
		private string _UpdatedBy;
		
		public UserEngagedHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLinkID", DbType="Int NOT NULL")]
		public int UserLinkID
		{
			get
			{
				return this._UserLinkID;
			}
			set
			{
				if ((this._UserLinkID != value))
				{
					this._UserLinkID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this._UpdatedDtTm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
	public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _InstantTitle;
		
		private string _PictureLocation;
		
		private short _OnlineStatusID;
		
		private short _SourceID;
		
		private System.Nullable<System.DateTime> _UpdatedDtTm;
		
		private string _UpdatedBy;
		
		private System.Nullable<char> _Gender;
		
		private int _Preference;
		
		private short _Age;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnInstantTitleChanging(string value);
    partial void OnInstantTitleChanged();
    partial void OnPictureLocationChanging(string value);
    partial void OnPictureLocationChanged();
    partial void OnOnlineStatusIDChanging(short value);
    partial void OnOnlineStatusIDChanged();
    partial void OnSourceIDChanging(short value);
    partial void OnSourceIDChanged();
    partial void OnUpdatedDtTmChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDtTmChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnPreferenceChanging(int value);
    partial void OnPreferenceChanged();
    partial void OnAgeChanging(short value);
    partial void OnAgeChanged();
    #endregion
		
		public UserInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstantTitle", DbType="VarChar(140)")]
		public string InstantTitle
		{
			get
			{
				return this._InstantTitle;
			}
			set
			{
				if ((this._InstantTitle != value))
				{
					this.OnInstantTitleChanging(value);
					this.SendPropertyChanging();
					this._InstantTitle = value;
					this.SendPropertyChanged("InstantTitle");
					this.OnInstantTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureLocation", DbType="VarChar(255)")]
		public string PictureLocation
		{
			get
			{
				return this._PictureLocation;
			}
			set
			{
				if ((this._PictureLocation != value))
				{
					this.OnPictureLocationChanging(value);
					this.SendPropertyChanging();
					this._PictureLocation = value;
					this.SendPropertyChanged("PictureLocation");
					this.OnPictureLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineStatusID", DbType="SmallInt NOT NULL")]
		public short OnlineStatusID
		{
			get
			{
				return this._OnlineStatusID;
			}
			set
			{
				if ((this._OnlineStatusID != value))
				{
					this.OnOnlineStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OnlineStatusID = value;
					this.SendPropertyChanged("OnlineStatusID");
					this.OnOnlineStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="SmallInt NOT NULL")]
		public short SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this.OnUpdatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDtTm = value;
					this.SendPropertyChanged("UpdatedDtTm");
					this.OnUpdatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(80)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preference", DbType="Int NOT NULL")]
		public int Preference
		{
			get
			{
				return this._Preference;
			}
			set
			{
				if ((this._Preference != value))
				{
					this.OnPreferenceChanging(value);
					this.SendPropertyChanging();
					this._Preference = value;
					this.SendPropertyChanged("Preference");
					this.OnPreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="SmallInt NOT NULL")]
		public short Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfoHistory")]
	public partial class UserInfoHistory
	{
		
		private int _UserID;
		
		private string _InstantTitle;
		
		private string _PictureLocation;
		
		private short _OnlineStatusID;
		
		private short _SourceID;
		
		private System.Nullable<System.DateTime> _UpdatedDtTm;
		
		private string _UpdatedBy;
		
		public UserInfoHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstantTitle", DbType="VarChar(140)")]
		public string InstantTitle
		{
			get
			{
				return this._InstantTitle;
			}
			set
			{
				if ((this._InstantTitle != value))
				{
					this._InstantTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureLocation", DbType="VarChar(255)")]
		public string PictureLocation
		{
			get
			{
				return this._PictureLocation;
			}
			set
			{
				if ((this._PictureLocation != value))
				{
					this._PictureLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineStatusID", DbType="SmallInt NOT NULL")]
		public short OnlineStatusID
		{
			get
			{
				return this._OnlineStatusID;
			}
			set
			{
				if ((this._OnlineStatusID != value))
				{
					this._OnlineStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="SmallInt NOT NULL")]
		public short SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this._SourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this._UpdatedDtTm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(80)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLink")]
	public partial class UserLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InitiatorCheckinID;
		
		private int _InitiatorUserID;
		
		private int _RecieverUserID;
		
		private System.DateTime _InitiatedDtTm;
		
		private System.Nullable<System.DateTime> _ResponseDtTm;
		
		private short _ResponseTypeID;
		
		private System.Nullable<System.DateTime> _UpdatedDtTm;
		
		private string _UpdatedBy;
		
		private int _RecieverCheckinID;
		
		private int _UserLinkID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiatorCheckinIDChanging(int value);
    partial void OnInitiatorCheckinIDChanged();
    partial void OnInitiatorUserIDChanging(int value);
    partial void OnInitiatorUserIDChanged();
    partial void OnRecieverUserIDChanging(int value);
    partial void OnRecieverUserIDChanged();
    partial void OnInitiatedDtTmChanging(System.DateTime value);
    partial void OnInitiatedDtTmChanged();
    partial void OnResponseDtTmChanging(System.Nullable<System.DateTime> value);
    partial void OnResponseDtTmChanged();
    partial void OnResponseTypeIDChanging(short value);
    partial void OnResponseTypeIDChanged();
    partial void OnUpdatedDtTmChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDtTmChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnRecieverCheckinIDChanging(int value);
    partial void OnRecieverCheckinIDChanged();
    partial void OnUserLinkIDChanging(int value);
    partial void OnUserLinkIDChanged();
    #endregion
		
		public UserLink()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiatorCheckinID", DbType="Int NOT NULL")]
		public int InitiatorCheckinID
		{
			get
			{
				return this._InitiatorCheckinID;
			}
			set
			{
				if ((this._InitiatorCheckinID != value))
				{
					this.OnInitiatorCheckinIDChanging(value);
					this.SendPropertyChanging();
					this._InitiatorCheckinID = value;
					this.SendPropertyChanged("InitiatorCheckinID");
					this.OnInitiatorCheckinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiatorUserID", DbType="Int NOT NULL")]
		public int InitiatorUserID
		{
			get
			{
				return this._InitiatorUserID;
			}
			set
			{
				if ((this._InitiatorUserID != value))
				{
					this.OnInitiatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._InitiatorUserID = value;
					this.SendPropertyChanged("InitiatorUserID");
					this.OnInitiatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieverUserID", DbType="Int NOT NULL")]
		public int RecieverUserID
		{
			get
			{
				return this._RecieverUserID;
			}
			set
			{
				if ((this._RecieverUserID != value))
				{
					this.OnRecieverUserIDChanging(value);
					this.SendPropertyChanging();
					this._RecieverUserID = value;
					this.SendPropertyChanged("RecieverUserID");
					this.OnRecieverUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiatedDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime InitiatedDtTm
		{
			get
			{
				return this._InitiatedDtTm;
			}
			set
			{
				if ((this._InitiatedDtTm != value))
				{
					this.OnInitiatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._InitiatedDtTm = value;
					this.SendPropertyChanged("InitiatedDtTm");
					this.OnInitiatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseDtTm", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResponseDtTm
		{
			get
			{
				return this._ResponseDtTm;
			}
			set
			{
				if ((this._ResponseDtTm != value))
				{
					this.OnResponseDtTmChanging(value);
					this.SendPropertyChanging();
					this._ResponseDtTm = value;
					this.SendPropertyChanged("ResponseDtTm");
					this.OnResponseDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseTypeID", DbType="SmallInt NOT NULL")]
		public short ResponseTypeID
		{
			get
			{
				return this._ResponseTypeID;
			}
			set
			{
				if ((this._ResponseTypeID != value))
				{
					this.OnResponseTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ResponseTypeID = value;
					this.SendPropertyChanged("ResponseTypeID");
					this.OnResponseTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this.OnUpdatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDtTm = value;
					this.SendPropertyChanged("UpdatedDtTm");
					this.OnUpdatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(20)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieverCheckinID", DbType="Int NOT NULL")]
		public int RecieverCheckinID
		{
			get
			{
				return this._RecieverCheckinID;
			}
			set
			{
				if ((this._RecieverCheckinID != value))
				{
					this.OnRecieverCheckinIDChanging(value);
					this.SendPropertyChanging();
					this._RecieverCheckinID = value;
					this.SendPropertyChanged("RecieverCheckinID");
					this.OnRecieverCheckinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLinkID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserLinkID
		{
			get
			{
				return this._UserLinkID;
			}
			set
			{
				if ((this._UserLinkID != value))
				{
					this.OnUserLinkIDChanging(value);
					this.SendPropertyChanging();
					this._UserLinkID = value;
					this.SendPropertyChanged("UserLinkID");
					this.OnUserLinkIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCheckInHistory")]
	public partial class UserCheckInHistory
	{
		
		private int _UserID;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private System.DateTime _UpdatedDtTm;
		
		private string _UpdatedBy;
		
		private System.Nullable<int> _BusinessId;
		
		public UserCheckInHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this._UpdatedDtTm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessId", DbType="Int")]
		public System.Nullable<int> BusinessId
		{
			get
			{
				return this._BusinessId;
			}
			set
			{
				if ((this._BusinessId != value))
				{
					this._BusinessId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCheckIn")]
	public partial class UserCheckIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private System.DateTime _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.DateTime _UpdatedDtTm;
		
		private string _UpdatedBy;
		
		private int _BusinessId;
		
		private int _CheckinID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnUpdatedDtTmChanging(System.DateTime value);
    partial void OnUpdatedDtTmChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnBusinessIdChanging(int value);
    partial void OnBusinessIdChanged();
    partial void OnCheckinIDChanging(int value);
    partial void OnCheckinIDChanged();
    #endregion
		
		public UserCheckIn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDtTm", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDtTm
		{
			get
			{
				return this._UpdatedDtTm;
			}
			set
			{
				if ((this._UpdatedDtTm != value))
				{
					this.OnUpdatedDtTmChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDtTm = value;
					this.SendPropertyChanged("UpdatedDtTm");
					this.OnUpdatedDtTmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessId", DbType="Int NOT NULL")]
		public int BusinessId
		{
			get
			{
				return this._BusinessId;
			}
			set
			{
				if ((this._BusinessId != value))
				{
					this.OnBusinessIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessId = value;
					this.SendPropertyChanged("BusinessId");
					this.OnBusinessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckinID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CheckinID
		{
			get
			{
				return this._CheckinID;
			}
			set
			{
				if ((this._CheckinID != value))
				{
					this.OnCheckinIDChanging(value);
					this.SendPropertyChanging();
					this._CheckinID = value;
					this.SendPropertyChanged("CheckinID");
					this.OnCheckinIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
